buildscript {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.1.3.RELEASE')
        classpath('gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:2.2.2')
    }
}

apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'eclipse'
apply plugin: 'idea'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.gorylenko.gradle-git-properties'

group = 'com.lvt4j.mangabank'

repositories {
    maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
}

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}
jar {
    enabled=true
}
bootJar {
    baseName = 'MangaBank'
}

gitProperties {
    extProperty = 'gitProps'
    dateFormat = 'yyyy-MM-dd HH:mm:ss'
}

springBoot {
    buildInfo{
        dependsOn(generateGitProperties);
        def tmpVer = version
        doFirst{
            tmpVer = version
            version = project.ext.gitProps['git.commit.id.abbrev']+' '+project.ext.gitProps['git.commit.time']+' '+project.ext.gitProps['git.commit.message.short']
        }
        properties{
            additional = [
                time : new java.text.SimpleDateFormat('yyyy-MM-dd HH:mm:ss').format(new Date())
            ]
        }
        doLast{
            version = tmpVer
        }
    }
}

tasks.withType(JavaCompile){
    options.encoding = 'UTF-8'
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

dependencies {
    testImplementation 'junit:junit:4.12'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.6'
    testCompileOnly 'org.projectlombok:lombok:1.18.6'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
        
    annotationProcessor 'org.projectlombok:lombok:1.18.6'
    compileOnly 'org.projectlombok:lombok:1.18.6'
    
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'
    compile group: 'commons-io', name: 'commons-io', version: '2.5'
    compile 'org.apache.commons:commons-collections4:4.3'
    compile group: 'com.google.guava', name: 'guava', version: '28.0-jre'
    compile 'com.fasterxml.jackson.core:jackson-core:2.9.8'
    compile 'com.fasterxml.jackson.core:jackson-databind:2.9.8'
    compile 'com.fasterxml.jackson.core:jackson-annotations:2.9.8'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jdk8:2.9.8'
    compile 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.9.8'
    api 'de.codecentric:spring-boot-admin-starter-client:2.1.6'
    api 'org.apache.lucene:lucene-core:8.11.2'
    
    api 'org.springframework.boot:spring-boot-starter-web'
    api 'org.springframework.boot:spring-boot-starter-actuator'
}
tasks.register('release', Zip) {
    delete "$buildDir/release"
    
    copy {
        from "$projectDir/src/main/resources/application.yml"
        into "$buildDir/release/config"
    }
    
    doFirst {
        copy {
            from "$projectDir/start.sh"
            from "$projectDir/stop.sh"
            from "$projectDir/restart.sh"
            from "$buildDir/libs/MangaBank.jar"
            into "$buildDir/release"
        }
    }
    
    from "$buildDir/release"
    include "*.sh","MangaBank.jar","config/application.yml"
    baseName "release"
    destinationDir file("$buildDir/release")
    
    dependsOn bootJar
}